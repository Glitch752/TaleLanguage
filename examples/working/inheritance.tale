let print = import("std").print;
let string = import("std").string;

let Point = class {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }
    print() {
        print("Point(" + string(this.x) + ", " + string(this.y) + ") ");
    }
    add(x, y) {
        this.x = this.x + x;
        this.y = this.y + y;
    }
    static printName() {
        print("Point");
    }
};

let point = Point(1, 2);
let i = 0;
while(i < 100) {
    point.print();
    point.add(1, 1);
    i = i + 1;
}

print("\n---\n");

let zOffset = 5;
let Point3D = class extending Point {
    constructor(x, y, z) {
        super(x, y);
        this.z = z + zOffset;
    }
    print() {
        print("Point3D(" + string(this.x) + ", " + string(this.y) + ", " + string(this.z) + ") ");
    }
    add(x, y, z) {
        super.add(x, y);
        this.z = this.z + z;
    }
    addTo(point) {
        super.add(point.x, point.y);
        this.z = this.z + point.z;
    }
    static printName() {
        super.printName();
        print(" > Point3D");
    }
    printName() {
        Point3D.printName();
        print("\n");
    }
};

Point3D.printName();
print(" | ");

let point3d = Point3D(5, 5, 3);
point3d.printName();

let j = 0;
while(j < 100) {
    point3d.print();
    point3d.add(1, 1, 1);
    point3d.addTo(Point3D(j, j, j + 1));
    j = j + 1;
}