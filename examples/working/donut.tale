let Std = import("std");

let tmr1 = null;
let tmr2 = null;
let A = 1;
let B = 1;

let asciiframe = function() {
    A = A + 0.07;
    B = B + 0.03;

    let sinA = Std.sin(A);
    let cosA = Std.cos(A);
    let sinB = Std.sin(B);
    let cosB = Std.cos(B);

    let output = "";
    let zBuffer = "";

    let k = 0;
    while(k < 1760) {
        zBuffer = zBuffer + " ";
        if(k % 80 == 79) {
            output = output + "\n";
        } else {
            output = output + " ";
        }
        k = k + 1;
    }

    let j = 0; // J is theta
    while(j < 6.28) {
        let jSin = Std.sin(j);
        let jCos = Std.cos(j);

        let i = 0; // I is phi
        while(i < 6.28) {
            let iSin = Std.sin(i);
            let iCos = Std.cos(i);

            let h = jCos + 2;
            let d = 1 / (iSin * h * sinA + jSin * cosA + 5);
            let t = iSin * h * cosA - jSin * sinA;

            let x = Std.floor(40 + 30 * d * (iCos * h * cosB - t * sinB));
            let y = Std.floor(12 + 15 * d * (iCos * h * sinB + t * cosB));

            let o = x + 80 * y;

            let depthChar = Std.substring("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", Std.floor(d * 100), Std.floor(d * 100) + 1);
            if(y < 22 && y >= 0 && x >= 0 && x < 79 && Std.intChar(depthChar) > Std.intChar(Std.substring(zBuffer, o, o + 1))) {
                let N = 8 * ((jSin * sinA - iSin * jCos * cosA) * cosB - iSin * jCos * sinA - jSin * cosA - iCos * jCos * sinB);

                zBuffer = Std.substring(zBuffer, 0, o) + depthChar + Std.substring(zBuffer, o + 1, Std.length(zBuffer));
                let idx = 0;
                if(N > 0) idx = N;

                output = Std.substring(output, 0, o) + Std.substring(".,-~:;=!*#$@", idx, idx + 1) + Std.substring(output, o + 1, Std.length(output));
            }

            i = i + 0.02;
        }
        j = j + 0.07;
    }

    Std.print(output);
};

while(true) {
    asciiframe();
}