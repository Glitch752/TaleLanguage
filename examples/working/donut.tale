let Std = import("std");

let tmr1 = null;
let tmr2 = null;
let A = 1;
let B = 1;

let Empty = class{};
while(true) {
    A = A + 0.07;
    B = B + 0.03;

    let sinA = Std.sin(A);
    let cosA = Std.cos(A);
    let sinB = Std.sin(B);
    let cosB = Std.cos(B);
    
    let zBuffer = Empty();
    let output = "";
    let k = 0;
    while(k < 1760) {
        zBuffer[Std.string(k)] = 0;
        if(k % 80 == 79) output = output + "\n";
        else output = output + " ";
        k = k + 1;
    }

    let j = 0; // J is theta
    while(j < 6.28) {
        let jSin = Std.sin(j);
        let jCos = Std.cos(j);

        let i = 0; // I is phi
        while(i < 6.28) {
            let iSin = Std.sin(i);
            let iCos = Std.cos(i);

            let h = jCos + 2;
            let d = 1 / (iSin * h * sinA + jSin * cosA + 5);
            let t = iSin * h * cosA - jSin * sinA;

            let x = Std.floor(40 + 30 * d * (iCos * h * cosB - t * sinB));
            let y = Std.floor(12 + 15 * d * (iCos * h * sinB + t * cosB));
            let o = x + 80 * y;
            let strO = Std.string(o);

            if(y < 22 && y >= 0 && x >= 0 && d > zBuffer[strO]) {
                zBuffer[strO] = d;
                output =
                    Std.substring(output, 0, o) +
                    ".,-~:;=!*#$@"[Std.floor(Std.max(0,
                        8 * ((jSin * sinA - iSin * jCos * cosA) * cosB - iSin * jCos * sinA - jSin * cosA - iCos * jCos * sinB)
                    ))] +
                    Std.substring(output, o + 1, Std.length(output));
            }

            i = i + 0.02;
        }
        j = j + 0.07;
    }

    Std.print(output);
}